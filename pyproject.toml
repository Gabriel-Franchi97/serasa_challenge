[tool.poetry]
name = "serasa_challenge"
version = "0.1.0"
description = ""
authors = ["Gabriel Franchi <gabriel.franchi.gf@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.68.1"
starlette-context = "^0.3.1"
SQLAlchemy = "^1.4.2"
alembic = "^1.5.8"
pydantic = "^1.8.1"
uvicorn = "^0.15.0"
python-dotenv = "*"
psycopg2-binary = "^2.9.3"
pandas = "^2.0.1"
pyarrow = "^11.0.0"
fastparquet = "^2023.4.0"
sqlalchemy-utils = "^0.41.1"

[tool.poetry.dev-dependencies]
pytest = "^6.2.2"
isort = "^5.7.0"
black = "^22.3.0"
pycodestyle = "^2.6.0"
flake8 = "^3.8.4"
mypy = "^0"
pytest-cov = "^2.11.1"
pytest-asyncio = "0.11.0"
mccabe = "^0.6.1"
pytest-mock = "^3.6.1"

[tool.isort]
force_single_line = true
line_length = 120
skip_glob = "**/migrations/*.py"
use_parentheses = true
multi_line_output = 5
include_trailing_comma = true
lines_between_types = 1
known_fastapi = "fastapi"
known_third_party = ["pydantic", "pytest", "pythonjsonlogger", "sqlalchemy", "starlette"]

[tool.black]
line-length = 120
target_version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )/
)
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
